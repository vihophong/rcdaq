#include <stdio.h>

#include <pmongui.h>
#include <pmonitor.h>   // get function prototypes
 

pmongui::pmongui(const TGWindow *p, UInt_t w, UInt_t h)
  : TGMainFrame (p,w,h)
{
  

  
  TGLayoutHints *fL1 = new TGLayoutHints(kLHintsTop | kLHintsLeft | kLHintsExpandX,
                           2, 2, 2, 2);
  TGLayoutHints *fL2 = new TGLayoutHints(kLHintsBottom | kLHintsRight, 2, 2, 5, 1);
  TGLayoutHints *fL3 = new TGLayoutHints(kLHintsTop | kLHintsLeft, 5, 5, 5, 5);
  TGLayoutHints *fL4 = new TGLayoutHints(kLHintsTop | kLHintsRight, 5, 5, 5, 5);
  TGLayoutHints *fL5 = new TGLayoutHints(kLHintsCenterY | kLHintsLeft | kLHintsExpandX,
			   2, 2, 0, 0);
  TGLayoutHints *fL6 = new TGLayoutHints(kLHintsTop | kLHintsRight | kLHintsExpandX,
                           2, 2, 2, 2);


  TGLayoutHints *fLayoutL = new TGLayoutHints(kLHintsLeft | kLHintsCenterY | kLHintsExpandX);
  TGLayoutHints *fLayoutR = new TGLayoutHints(kLHintsRight | kLHintsCenterY | kLHintsExpandX);


  TGCompositeFrame *tmain = new TGCompositeFrame(this, 100, 100, kHorizontalFrame);


  TGGroupFrame *t1gf1 = new TGGroupFrame(tmain, new TGString("Actions "));
  TGGroupFrame *t1gf2 = new TGGroupFrame(tmain, new TGString("Status "));

  statuslabel = new TGLabel(t1gf2, new TGString("Stopped")) ;
  streamlabel = new TGLabel(t1gf2, new TGString("No Stream open")) ;
  evtnrlabel = new TGLabel(t1gf2, new TGString("0")) ;

  fButton1 = new TGTextButton(t1gf1, "&Start", 1);

  fButton2 = new TGTextButton(t1gf1, "&Stop", 2);
  //fButton2->SetCommand("printf(\"This is ROOT version %s\\n\",gROOT->GetVersion());");

  fButton3 = new TGTextButton(t1gf1, "&Close GUI", 3);
  //fButton3->SetCommand(".q" );
  fButton1->Associate(this);
  fButton2->Associate(this);
  fButton3->Associate(this);



  //AddFrame(tab1, fLayout);

  AddFrame(tmain, fL1 );

  tmain->AddFrame(t1gf1, fL1 );
  tmain->AddFrame(t1gf2, fL6 );

  t1gf1->AddFrame(fButton1, fL1);
  t1gf1->AddFrame(fButton2, fL1);
  t1gf1->AddFrame(fButton3, fL1);

  t1gf2->AddFrame(statuslabel, fL1);
  t1gf2->AddFrame(streamlabel, fL1);
  t1gf2->AddFrame(evtnrlabel, fL1);



  MapSubwindows();

  Layout();

  SetWindowName("PMON Control");
  SetIconName("PMON Control");
    
  MapWindow();
}

pmongui::~pmongui()
{
  delete fLayout;
  delete fButton1;
  delete fButton2;
}


Bool_t pmongui::ProcessMessage(Long_t msg, Long_t parm1, Long_t)
{
    // Process events generated by the buttons in the frame.

    switch (GET_MSG(msg)) {
        case kC_COMMAND:
            switch (GET_SUBMSG(msg)) {
                case kCM_BUTTON:
                    printf("text button id %ld pressed\n", parm1);
		    if (parm1 == 1)   pstart();
		    if (parm1 == 2)   pstop();
		    if (parm1 == 3)   prmgui();  

                    break;
                case kCM_CHECKBUTTON:
                    printf("check button id %ld pressed\n", parm1);
                    break;

                default:
                    break;
            }
        default:
            break;
    }
    return kTRUE;
}

int pmongui::setStatusLabel(const char * status)
{
  statuslabel->SetText(new TGString(status)) ;
  return 0;
}

int pmongui::setStreamLabel(const char * streamname)
{
  streamlabel->SetText(new TGString(streamname)) ;
  return 0;
}

int pmongui::setEvtnrLabel(const int nr)
{
  char s[20];
  sprintf(s,"%d" , nr);
  evtnrlabel->SetText(new TGString(s)) ;
  return 0;
}
